name: Generate Release Notes

on:
  push:
    branches:
      - dev

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Get latest tag
        id: get_latest_tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0 --match "v[0-9]*" || echo 'v0.0.0')"

      - name: Generate new tag
        id: generate_new_tag
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.tag }}
          version=${latest_tag:1}
          IFS='.' read -r -a version_parts <<< "$version"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}

          case ${{ github.event.head_commit.message }} in
            *#major_release*)
              new_major=$((major + 1))
              new_minor=0
              new_patch=0
              ;;
            *#minor_release*)
              new_major=$major
              new_minor=$((minor + 1))
              new_patch=0
              ;;
            *#patch_release*)
              new_major=$major
              new_minor=$minor
              new_patch=$((patch + 1))
              ;;
            *)
              echo "Unknown branch type, not updating version"
              exit 1
              ;;
          esac

          new_tag="v${new_major}.${new_minor}.${new_patch}"
          echo "::set-output name=new_tag::$new_tag"

      - name: Create Release Note
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.generate_new_tag.outputs.new_tag }}
          release_name: "Release Note"
          body: ${{ steps.fetch_prs.outputs.release_notes }}
          draft: false
          prerelease: false

      - name: Commit and push release notes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add release_notes.txt
          git commit -m "Add release notes"
          git push origin dev
